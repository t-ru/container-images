name: sles-15-3-kiwi-ng

on:

  workflow_dispatch:
  
  #schedule:
  #  - cron: '0 0 * * *'  # every day at midnight

env:
  BASE_IMAGE_NAME: "registry.suse.com/suse/sle15"
  BASE_IMAGE_TAG: "15.3"
  TARGET_IMAGE_NAME: "sles-15-3-kiwi-ng"
  WORK_CONTAINER: "work-container"
  HELPER_CONTAINER: "helper-container"
  
jobs:

  build:
    runs-on: ubuntu-latest

    steps:

      - name: Show variables
        run: |
          echo "Base image name: ${{ env.BASE_IMAGE_NAME }}"
          echo "Base image tag: ${{ env.BASE_IMAGE_TAG }}"
          echo "Target image name: ${{ env.TARGET_IMAGE_NAME }}"
      
      # Check out repository
      - uses: actions/checkout@v2
      
      # Pull base image
      - name: Pull base image
        run: buildah pull ${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}
      
      # Show images
      - name: Show images
        run: buildah images
      
      # Helper container - Create
      - name: Helper container - Create
        run: buildah from --name "${{ env.HELPER_CONTAINER }}" ${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}
      
      # Helper container - Install packages (SUSEConnect)
      - name: Helper container - Install packages (SUSEConnect)
        run: buildah run ${{ env.HELPER_CONTAINER }} zypper install --no-confirm --no-recommends SUSEConnect
      
      # Helper container - SCC Registration
      - name: Helper container - SCC Registration
        run: buildah run ${{ env.HELPER_CONTAINER }} SUSEConnect --regcode ${{ secrets.SCC_REGCODE_SLES }} --email ${{ secrets.SCC_EMAIL }}
      
      # Helper container - Copy SCC credentials to build host
      - name: Helper container - Copy SCC credentials to build host
        run: |
          mkdir $GITHUB_WORKSPACE/scc-creds
          buildah run -v $GITHUB_WORKSPACE/scc-creds:/scc-creds ${{ env.HELPER_CONTAINER }} cp "/etc/zypp/credentials.d/SCCcredentials" "/scc-creds"
          mv $GITHUB_WORKSPACE/scc-creds/SCCcredentials $GITHUB_WORKSPACE
          rm -rf $GITHUB_WORKSPACE/scc-creds
      
      # Work container - Create
      - name: Work container - Create
        run: buildah from --name "${{ env.WORK_CONTAINER }}" ${{ env.BASE_IMAGE_NAME }}:${{ env.BASE_IMAGE_TAG }}
      
      # Work container - Add additional modules
      - name: Work container - Add additional modules
        run: buildah config --env "ADDITIONAL_MODULES=PackageHub" ${{ env.WORK_CONTAINER }}
      
      # Work container - Add KIWI NG repository
      - name: Work container - Add KIWI NG repository
        run: buildah run --mount=type=bind,src=$GITHUB_WORKSPACE/SCCcredentials,dst=/run/secrets/SCCcredentials ${{ env.WORK_CONTAINER }} zypper addrepo http://download.opensuse.org/repositories/Virtualization:/Appliances:/Builder/SLE_15_SP3 appliance-builder
      
      # Work container - Refresh repositories
      - name: Work container - Refresh repositories
        run: buildah run --mount=type=bind,src=$GITHUB_WORKSPACE/SCCcredentials,dst=/run/secrets/SCCcredentials ${{ env.WORK_CONTAINER }} zypper --gpg-auto-import-keys refresh
      
      # Work container - Install updates
      - name: Work container - Install updates
        run: buildah run --mount=type=bind,src=$GITHUB_WORKSPACE/SCCcredentials,dst=/run/secrets/SCCcredentials ${{ env.WORK_CONTAINER }} zypper update --no-confirm --no-recommends
      
      # Work container - Install packages (python3-kiwi)
      - name: Work container - Install packages (python3-kiwi)
        run: buildah run --mount=type=bind,src=$GITHUB_WORKSPACE/SCCcredentials,dst=/run/secrets/SCCcredentials ${{ env.WORK_CONTAINER }} zypper install --no-confirm --no-recommends python3-kiwi
      
      # Work container - Install packages (kiwi-systemdeps)
      - name: Work container - Install packages (kiwi-systemdeps)
        run: buildah run --mount=type=bind,src=$GITHUB_WORKSPACE/SCCcredentials,dst=/run/secrets/SCCcredentials ${{ env.WORK_CONTAINER }} zypper install --no-confirm --no-recommends kiwi-systemdeps
      
      
      # Helper container - SCC Deregistration
      - name: Helper container - SCC Deregistration
        run: buildah run ${{ env.HELPER_CONTAINER }} SUSEConnect --de-register
      
      # Helper container - Remove
      - name: Helper container - Remove
        run: buildah rm ${{ env.HELPER_CONTAINER }}
      
      
      
      
      
      
      
      # Create target image
      - name: Create target image
        run: buildah commit --format docker --squash ${{ env.WORK_CONTAINER }} ${{ env.TARGET_IMAGE_NAME }}:${{ github.sha }}
      
      # Show images
      - name: Show images
        run: buildah images
        
      # Create additional tags
      - name: Create additional tags
        run: |
          buildah tag ${{ env.TARGET_IMAGE_NAME }}:${{ github.sha }} ${{ env.TARGET_IMAGE_NAME }}:${{ github.run_number }}  
          buildah tag ${{ env.TARGET_IMAGE_NAME }}:${{ github.sha }} ${{ env.TARGET_IMAGE_NAME }}:latest
      
      # Show images
      - name: Show images
        run: buildah images
      
      # Push to ghcr.io
      - name: Push to ghcr.io
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.TARGET_IMAGE_NAME }}
          tags: latest ${{ github.run_number }} ${{ github.sha }}
          registry: ghcr.io/${{ github.repository_owner }}/container-images
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
          
          
